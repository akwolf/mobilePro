<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		"
       default-lazy-init="false">
    <!-- 扫描包 -->
    <context:component-scan base-package="com.jnzy.mdm" use-default-filters="false">
        <!-- 扫描controller -->
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>

    </context:component-scan>
    <!-- 对静态资源文件的访问，不支持访问WEB-INF目录？ -->
    <mvc:default-servlet-handler/>

    <!-- 默认的注解映射的支持[会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter
        两个bean,是spring MVC为@Controllers分发请求所必须的。] -->
    <mvc:annotation-driven/>
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html; charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <!-- 定义JSP -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--支持异步方法执行,并设置poolSize-->
    <task:annotation-driven executor="safetyExecutor" scheduler="safetyScheduler"/>
    <task:executor id="safetyExecutor" pool-size="10"/>
    <task:scheduler id="safetyScheduler" pool-size="20"/>

    <!--spring mvc upload，支持上传文件 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960"/>
    </bean>

    <!-- 配置拦截器，多个拦截器，顺序执行 -->
    <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
            <mvc:mapping path="/**"/>
            <!-- 验证版本的拦截器 -->
            <bean class="com.jnzy.mdm.comm.interceptor.CheckVersionInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 定时任务 -->
    <bean id="sysLogTask" class="com.jnzy.mdm.syslog.controller.SysLogTask"></bean>
    <task:scheduled-tasks>
    <!--每天1,2,3点执行三次采集日志信息
        测试 每10分钟采集一次日志信息
         cron="0 0/10 * * * ? " />-->
     <task:scheduled ref="sysLogTask" method="readLogs"
                     cron="0 0 1,2,3 * * ? " />
        <!--<task:scheduled ref="mdmTask" method="AddPushUserModelTags"
                        cron="0 0 23 * * ? " />
        <task:scheduled ref="mdmTask" method="userLongOffline"
                        cron="0 0 1 * * * " />-->
        <!--
           <task:scheduled ref="mdmTask" method="upateUserOnline"
                           cron="0 */1 * * * ? " />
                           -->
     </task:scheduled-tasks>

</beans>